/*
 * Copyright 2018 OlivÃ©r Falvai
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
if (getGradle().getStartParameter().getTaskRequests().toString().contains("Release")) {
    // Firebase Performance slows down the build
    apply plugin: 'com.google.firebase.firebase-perf'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def appVersionCode = 21
def appVersionName = "2.0.6"
android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.ofalvai.bpinfo"
        signingConfig signingConfigs.config

        minSdkVersion 16
        targetSdkVersion 29

        versionCode appVersionCode
        versionName appVersionName

        resConfigs "en", "hu"
        resValue "string", "APP_VERSION", appVersionName

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            multiDexEnabled true
            applicationIdSuffix ".debug"
            resValue "string", "PACKAGE_NAME_REAL", "com.ofalvai.bpinfo.debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "PACKAGE_NAME_REAL", "com.ofalvai.bpinfo"
        }
    }

    flavorDimensions "network", "backend"

    productFlavors {
        live {
            dimension "network"
        }
        mock {
            dimension "network"
            applicationIdSuffix ".mock"
        }
        prod {
            dimension "backend"
            buildConfigField "String", "BACKEND_URL", '"https://bpinfo-backend-api.herokuapp.com/api/v1/"'
        }
        staging {
            dimension "backend"
            buildConfigField "String", "BACKEND_URL", '"https://bpinfo-backend-api-staging.herokuapp.com/api/v1/"'
        }
    }

    bundle {
        language {
            enableSplit = false // Required for dynamic language switching
        }
    }

    // Removing the combination of release buildType and the mock flavor
    variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    lintOptions {
        fatal 'StopShip', 'NewApi'
        warning 'ConvertToWebp'
    }

    packagingOptions {
        exclude "**/kotlin/**"
        exclude "/META-INF/*.kotlin_module"
        exclude 'protobuf.meta'
        exclude 'error_prone/**'
        exclude 'jsr305_annotations/**'
        exclude 'third_party/java_src/error_prone/**'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile.class).all {
    kotlinOptions {
        freeCompilerArgs = [
                '-progressive'
        ]
    }
}

ext {
    koinVersion = "1.0.1"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // AndroidX
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.core:core-ktx:1.0.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.0.0'

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-perf:16.1.2'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Volley
    implementation 'com.android.volley:volley:1.1.0'

    // FlowLayout
    implementation('com.wefika:flowlayout:0.4.1') {
        exclude group: 'com.intellij', module: 'annotations'
    }

    // Koin for Android
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"

    // HTML TextView
    implementation 'org.sufficientlysecure:html-textview:3.8'

    // ThreetenABP
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.2'

    // Process-Phoenix
    implementation 'com.jakewharton:process-phoenix:2.0.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0') {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:runner:1.1.0-alpha3') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:rules:1.1.0-alpha3') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.23.0"
    testImplementation "androidx.arch.core:core-testing:2.0.0"
    testImplementation('org.threeten:threetenbp:1.3.7') {
        because '''
            Replacing com.jakewharton.threetenabp:threetenabp in unit tests because timezone 
            database was missing'''
    }
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    // Koin testing tools
    testImplementation "org.koin:koin-test:$koinVersion"

    testImplementation('org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2') {
        because """
            This is needed to check Koin\'s dependency graph. It tries to instantiate Volley, which 
            tries to load the Apache HTTP client, but the classloader fails to find its classes
            Remove this dependency when Volley gets replaced by something else
        """
    }
}

apply plugin: 'com.google.gms.google-services'
