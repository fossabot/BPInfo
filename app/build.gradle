/*
 * Copyright 2016 OlivÃ©r Falvai
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.gfx.ribbonizer'
apply plugin: 'io.fabric'
// apply plugin: 'com.google.firebase.firebase-perf' TODO: re-enable before release

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def appVersionCode = 14
def appVersionName = "1.4.2"
def supportLibVersion = "27.1.1"

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.ofalvai.bpinfo"
        signingConfig signingConfigs.config

        minSdkVersion 16
        targetSdkVersion 27

        versionCode appVersionCode
        versionName appVersionName

        resConfigs "en", "hu"
        resValue "string", "APP_VERSION", appVersionName

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "PACKAGE_NAME_REAL", "com.ofalvai.bpinfo.debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "PACKAGE_NAME_REAL", "com.ofalvai.bpinfo"
        }
    }

    flavorDimensions "network", "backend"

    productFlavors {
        live {
            dimension "network"
        }
        mock {
            dimension "network"
            applicationIdSuffix ".mock"
        }
        prod {
            dimension "backend"
            buildConfigField "String", "BACKEND_URL", '"https://bpinfo-backend-api.herokuapp.com/api/v1/"'
        }
        staging {
            dimension "backend"
            buildConfigField "String", "BACKEND_URL", '"https://bpinfo-backend-api.herokuapp.com/api/v1/"'
        }
    }

    lintOptions {
        fatal 'StopShip', 'NewApi'
        warning 'ConvertToWebp'
    }

    packagingOptions {
        exclude 'protobuf.meta'
        exclude 'error_prone/**'
        exclude 'jsr305_annotations/**'
        exclude 'third_party/java_src/error_prone/**'
    }
}

ribbonizer {
    builder { variant, iconFile ->
        if (variant.flavorName == "mock") {
            return yellowRibbonFilter(variant, iconFile)
        } else if (variant.buildType.name == "debug") {
            return grayRibbonFilter(variant, iconFile)
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:customtabs:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.volley:volley:1.0.0'
    implementation ('com.wefika:flowlayout:0.4.1') {
        exclude group: 'com.intellij', module: 'annotations'
    }
    implementation 'com.google.dagger:dagger:2.13'
    implementation 'org.sufficientlysecure:html-textview:3.4'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.google.firebase:firebase-core:15.0.2'
    implementation 'com.google.firebase:firebase-perf:15.2.0'
    implementation 'com.google.firebase:firebase-messaging:15.0.2'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
    implementation 'com.jakewharton.timber:timber:4.7.0'
    implementation 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.2'

    kapt 'com.google.dagger:dagger-compiler:2.13'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2') {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test:runner:0.5') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test:rules:0.5') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.13.0"
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
}

apply plugin: 'com.google.gms.google-services'
